/**
 * client.js
 */

 const util = require('util');

 const Bacnet = require('node-bacnet');
 
 module.exports = {
    bacnetClient: '',
 
    unsubscribe(address, objId) {
    return new Promise((resolve, reject) => {
        this.bacnetClient.subscribeCov(address, objId, 85, true, false, 1, (err) => {
            if (err) {
                reject(err)
            } else {
                resolve("done")
            }
        });
        });
    },

    subscribe(address, objId) {
    return new Promise((resolve, reject) => {
        this.bacnetClient.subscribeCov(address, objId, 85, false, false, 0, (err) => {
            if (err) {
                reject(err)
            } else {
                resolve("done")
            }
        });
        });
    },

   init(bacnetClient) {
     this.bacnetClient = bacnetClient;
   },

   write(data) {
     return new Promise((resolve, reject) => {
         
        this.bacnetClient.writeProperty(data.address, JSON.parse(data.chan).objectId, 85, [
            {
            type: +data.dataType.match(/[-]{0,1}[\d]*[.]{0,1}[\d]+/g), 
            value: data.value}
          ], (err, value) => {
            if (err) {
                reject(err);
              } else {
                resolve(value);
              }
          });
     });
   },
 
 };